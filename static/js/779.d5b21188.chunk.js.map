{"version":3,"file":"static/js/779.d5b21188.chunk.js","mappings":"uSACaA,EAAcC,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gFAIvB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,IAE/BC,EAAcN,EAAAA,QAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kHAGvB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAE,IAEtB,SAAAF,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,MAAM,I,SCqDxD,EA1DgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAgDC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAC5CI,GAA4BL,EAAAA,EAAAA,UAASM,EAAAA,EAAAA,MAAcC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA5CG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAyBxB,OAxBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAUM,OAVNF,EAAAC,KAAA,EAEhBJ,EAAU,CACdM,OAAQ,MACRC,IAAI,sCAADC,OAAwC3B,EAAO,YAClD4B,OAAQ,CAAEC,SAAU,QAASC,QAASC,EAAAA,EAASC,KAAM,GACrDC,QAAS,CACPC,OAAQ,qBAGZtB,EAAUH,EAAAA,EAAAA,SAAkBa,EAAAE,KAAA,EAGlBW,EAAAA,EAAAA,QAAchB,GAAS,KAAD,EAAAC,EAAAE,EAAAc,KADtBf,EAAOD,EAAfiB,KAAQhB,QAEVd,EAAoBc,GACpBT,EAAUH,EAAAA,EAAAA,UAAmBa,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,SAE7BV,EAAUH,EAAAA,EAAAA,UAAmB,yBAAAa,EAAAiB,OAAA,GAAArB,EAAA,mBAEhC,kBAnBsB,OAAAH,EAAAyB,MAAA,KAAAC,UAAA,KAoBvB3B,GACF,GAAG,CAACP,EAAqBP,IAErBW,IAAWF,EAAAA,EAAAA,SACNiC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,IAEZhC,IAAWF,EAAAA,EAAAA,UAEXiC,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAAAC,UACNH,EAAAA,EAAAA,KAACrD,EAAW,CAAAwD,SACTvC,EAAiBwC,OAAS,EACzBxC,EAAiByC,KAAI,SAAAC,GAAI,OACvBC,EAAAA,EAAAA,MAACrD,EAAW,CAAAiD,SAAA,EACVH,EAAAA,EAAAA,KAAA,KAAAG,UACEH,EAAAA,EAAAA,KAAA,KAAAG,SAAA,WAAAlB,OAAeqB,EAAKE,aAEtBR,EAAAA,EAAAA,KAAA,KAAAG,SAAIG,EAAKG,YAJOH,EAAKI,GAKT,KAGhBV,EAAAA,EAAAA,KAAC9C,EAAW,CAAAiD,UACVH,EAAAA,EAAAA,KAACW,EAAAA,GAAQ,CAACC,KAAK,uCAQvB3C,IAAWF,EAAAA,EAAAA,UACNiC,EAAAA,EAAAA,KAACa,EAAAA,GAAK,SADf,CAGF,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const ReviewsList = styled.ul`\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: ${props => props.theme.spacing(5)};\n`;\nexport const ReviewsItem = styled.li`\n  text-align: left;\n  width: 100%;\n  padding: ${props => props.theme.spacing(5)};\n  border-radius: 20px;\n  background-color: ${props => props.theme.colors.cardBg};\n`;\n","import axios from 'axios';\nimport { Error, Loader, NoResult, Section } from 'components';\nimport { statuses, API_KEY } from 'constants';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsItem, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviewsData, setMovieReviewsData] = useState(null);\n  const [status, setStatus] = useState(statuses.IDLE);\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const options = {\n          method: 'GET',\n          url: `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n          params: { language: 'en-US', api_key: API_KEY, page: 1 },\n          headers: {\n            accept: 'application/json',\n          },\n        };\n        setStatus(statuses.PENDING);\n        const {\n          data: { results },\n        } = await axios.request(options);\n        setMovieReviewsData(results);\n        setStatus(statuses.RESOLVED);\n      } catch (error) {\n        setStatus(statuses.REJECTED);\n      }\n    };\n    fetchMovieReviews();\n  }, [setMovieReviewsData, movieId]);\n\n  if (status === statuses.PENDING) {\n    return <Loader />;\n  }\n  if (status === statuses.RESOLVED) {\n    return (\n      <Section>\n        <ReviewsList>\n          {movieReviewsData.length > 0 ? (\n            movieReviewsData.map(item => (\n              <ReviewsItem key={item.id}>\n                <p>\n                  <b>{`Author: ${item.author}`}</b>\n                </p>\n                <p>{item.content}</p>\n              </ReviewsItem>\n            ))\n          ) : (\n            <ReviewsItem>\n              <NoResult text=\"Sorry. There are no reviews.\" />\n            </ReviewsItem>\n          )}\n        </ReviewsList>\n      </Section>\n    );\n  }\n\n  if (status === statuses.REJECTED) {\n    return <Error />;\n  }\n};\nexport default Reviews;\n"],"names":["ReviewsList","styled","_templateObject","_taggedTemplateLiteral","props","theme","spacing","ReviewsItem","_templateObject2","colors","cardBg","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieReviewsData","setMovieReviewsData","_useState3","statuses","_useState4","status","setStatus","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","options","_yield$axios$request","results","_context","prev","next","method","url","concat","params","language","api_key","API_KEY","page","headers","accept","axios","sent","data","t0","stop","apply","arguments","_jsx","Loader","Section","children","length","map","item","_jsxs","author","content","id","NoResult","text","Error"],"sourceRoot":""}