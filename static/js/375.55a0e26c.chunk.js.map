{"version":3,"file":"static/js/375.55a0e26c.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","constants/apiKey.js","constants/statuses.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const MovieWrapper = styled.div`\n  display: flex;\n  padding: ${props => props.theme.spacing(20)} 0;\n  & img {\n    width: 100%;\n    height: 100%;\n    max-width: 400px;\n  }\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  text-align: left;\n  max-width: 500px;\n  padding-left: ${props => props.theme.spacing(5)};\n  margin-left: auto;\n  display: flex;\n  flex-direction: column;\n  row-gap: ${props => props.theme.spacing(5)};\n`;\nexport const MovieInfoGanres = styled.div`\n  & div {\n    display: flex;\n    column-gap: ${props => props.theme.spacing(5)};\n  }\n`;\nexport const MovieAdditionInfo = styled.div`\n  & ul {\n    display: flex;\n    column-gap: 10px;\n    justify-content: center;\n    padding: 0;\n\n    & li {\n      flex-grow: 1;\n\n      & a {\n        display: block;\n        padding-top: ${props => props.theme.spacing(5)};\n        padding-bottom: ${props => props.theme.spacing(5)};\n        background-color: ${props => props.theme.colors.linkBg};\n        border-radius: 20px;\n        border: 1px solid transparent;\n\n        &:hover {\n          color: ${props => props.theme.colors.accent};\n        }\n\n        &.active {\n          background-color: ${props => props.theme.colors.linkBgActive};\n          color: ${props => props.theme.colors.accent};\n          border: 1px solid ${props => props.theme.colors.accent};\n        }\n      }\n    }\n  }\n`;\n","import { statuses, API_KEY } from 'constants';\nimport { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { Error, Loader, Section } from 'components';\nimport axios from 'axios';\nimport {\n  MovieAdditionInfo,\n  MovieInfoGanres,\n  MovieInfoWrapper,\n  MovieWrapper,\n} from './MovieDetails.styled';\nimport { format } from 'date-fns';\n\n// lazy import\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState(statuses.IDLE);\n  const [movieData, setMovieData] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const options = {\n          method: 'GET',\n          url: `https://api.themoviedb.org/3/movie/${movieId}`,\n          params: { language: 'en-US', api_key: API_KEY },\n          headers: {\n            accept: 'application/json',\n          },\n        };\n        setStatus(statuses.PENDING);\n        const { data } = await axios.request(options);\n        setMovieData(data);\n        setStatus(statuses.RESOLVED);\n      } catch (error) {\n        setStatus(statuses.REJECTED);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  if (status === statuses.PENDING) {\n    return <Loader />;\n  }\n\n  if (status === statuses.RESOLVED) {\n    const { poster_path, title, overview, genres, release_date, vote_average } =\n      movieData;\n    return (\n      <>\n        <Section>\n          <Link to={backLinkLocationRef.current}>Go Back</Link>\n          <MovieWrapper>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={`poster for the movie ${title}`}\n            />\n            <MovieInfoWrapper>\n              <h2>{`${title} (${format(new Date(release_date), 'yyyy')})`}</h2>\n              <p>\n                <b>Vote average: </b>\n                {`${Math.floor(vote_average * 10)}%`}\n              </p>\n              <div>\n                <p>\n                  <b>Overview: </b>\n                </p>\n                <p>{`${overview}`}</p>\n              </div>\n              <MovieInfoGanres>\n                <p>\n                  <b>Genres:</b>\n                </p>\n                <div>\n                  {genres.map(({ name, id }) => (\n                    <span key={id}>{name}</span>\n                  ))}\n                </div>\n              </MovieInfoGanres>\n            </MovieInfoWrapper>\n          </MovieWrapper>\n        </Section>\n\n        <Section>\n          <MovieAdditionInfo>\n            <ul>\n              <li>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n              </li>\n            </ul>\n          </MovieAdditionInfo>\n        </Section>\n\n        <Suspense fallback={<Loader />}>\n          <Routes>\n            <Route path=\"reviews/\" element={<Reviews />} />\n            <Route path=\"cast/\" element={<Cast />} />\n          </Routes>\n        </Suspense>\n      </>\n    );\n  }\n  if (status === statuses.REJECTED) {\n    return <Error />;\n  }\n};\nexport default MovieDetails;\n","export const API_KEY = '5bbd1d4c96506288b0259b631c7a07f8';\n","export const statuses = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: `resolved`,\n  REJECTED: `rejected`,\n};\n"],"names":["MovieWrapper","styled","_templateObject","_taggedTemplateLiteral","props","theme","spacing","MovieInfoWrapper","_templateObject2","MovieInfoGanres","_templateObject3","MovieAdditionInfo","_templateObject4","colors","linkBg","accent","linkBgActive","Cast","lazy","Reviews","_location$state$from","_location$state","movieId","useParams","_useState","useState","statuses","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","movieData","setMovieData","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","options","_yield$axios$request","data","_context","prev","next","method","url","concat","params","language","api_key","API_KEY","headers","accept","axios","sent","t0","stop","apply","arguments","_jsx","Loader","poster_path","title","overview","genres","release_date","vote_average","_jsxs","_Fragment","children","Section","Link","to","current","src","alt","format","Date","Math","floor","map","_ref2","name","id","NavLink","Suspense","fallback","Routes","Route","path","element","Error","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}