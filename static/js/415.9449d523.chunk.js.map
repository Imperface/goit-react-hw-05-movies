{"version":3,"file":"static/js/415.9449d523.chunk.js","mappings":"yOA2DA,UAtDa,WACX,IAAAA,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA4BL,EAAAA,EAAAA,UAASM,EAAAA,EAAAA,MAAcC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA5CG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAoCxB,OAlCAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAgBhB,OAhBgBF,EAAAC,KAAA,EAGVL,EAAU,CACdO,OAAQ,CAAEC,SAAU,QAASC,QAASC,EAAAA,GACtCC,QAAS,CACPC,OAAQ,qBAKZnB,EAAUH,EAAAA,EAAAA,SACO,kDAIjBc,EAAAE,KAAA,EACuBO,EAAAA,EAAAA,IALN,kDAK0Bb,GAAS,KAAD,EAAAC,EAAAG,EAAAU,KAA3CZ,EAAID,EAAJC,KACAC,EAAYD,EAAZC,QAGRf,EAAUe,GAGVV,EAAUH,EAAAA,EAAAA,UAAmBc,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAG7BX,EAAUH,EAAAA,EAAAA,UAAmB,yBAAAc,EAAAY,OAAA,GAAAjB,EAAA,mBAEhC,kBA7BgB,OAAAH,EAAAqB,MAAA,KAAAC,UAAA,KA8BjBvB,GACF,GAAG,IAECH,IAAWF,EAAAA,EAAAA,SACN6B,EAAAA,EAAAA,KAACC,EAAAA,GAAM,IAGZ5B,IAAWF,EAAAA,EAAAA,UAEX6B,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,MAAM,qCAAoCC,UACjDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACrC,OAAQA,MAKrBK,IAAWF,EAAAA,EAAAA,UACN6B,EAAAA,EAAAA,KAACM,EAAAA,GAAK,SADf,CAGF,C","sources":["pages/Home.jsx"],"sourcesContent":["import { Error, Loader, MovieList, Section } from 'components';\nimport { useEffect, useState } from 'react';\nimport { statuses, API_KEY } from 'constants';\nimport axios from 'axios';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(statuses.IDLE);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        // create request options\n        const options = {\n          params: { language: 'en-US', api_key: API_KEY },\n          headers: {\n            accept: 'application/json',\n          },\n        };\n\n        // set status pendind, render spiner\n        setStatus(statuses.PENDING);\n        const endpoint = 'https://api.themoviedb.org/3/trending/movie/day';\n\n        // const { data: {results} } = await axios.get(endpoint, options);\n\n        // get data by request, destruct\n        const { data } = await axios.get(endpoint, options);\n        const { results } = data;\n\n        // set data to state\n        setMovies(results);\n\n        // set status resolved, unmount spiner, mount page\n        setStatus(statuses.RESOLVED);\n      } catch (error) {\n        // mount error block\n        setStatus(statuses.REJECTED);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  if (status === statuses.PENDING) {\n    return <Loader />;\n  }\n\n  if (status === statuses.RESOLVED) {\n    return (\n      <Section title=\"The list of trending movies today:\">\n        <MovieList movies={movies} />\n      </Section>\n    );\n  }\n\n  if (status === statuses.REJECTED) {\n    return <Error />;\n  }\n};\nexport default Home;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","statuses","_useState4","status","setStatus","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","options","_yield$axios$get","data","results","_context","prev","next","params","language","api_key","API_KEY","headers","accept","axios","sent","t0","stop","apply","arguments","_jsx","Loader","Section","title","children","MovieList","Error"],"sourceRoot":""}